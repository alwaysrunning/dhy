/**
 * Created by 沐沐 on 2015-10-23.
 */

/**
 * Created by 沐沐 on 2015-10-14.
 */

var apis = require('../');
var chai = require('chai');
var chaiPromise = require('chai-as-promised');
chai.use(chaiPromise);
chai.should();

describe('user', function () {
    before(function () {
        apis.config({
            api: {
                printLog: false,
                printSign: false,
                host: '10.200.51.104',//API测试服务器地址
                port: 8080,//API测试服务器端口号
                path: '/bubugao-mobile-api/app',//测试服务器普通API请求地址
                authPath: '/bubugao-mobile-api/app/auth',//测试服务器验证API请求地址
                ver: '2.7',
                autoToken: true,
                testTokens: {
                    tokenId: '55cb831071d040d6a6bff00edb03f473',
                    secret: 'aab56db4e5b1619d905dd48d3acf23eb'
                }
            }
        });
    });

    describe('#messageCount', function () {
        it('should get messageCount', function () {
            return apis.request.getTokens().then(function (tokens) {
                return apis.message.messageCount(tokens);
            }).then(function(data){
                //console.log(data);
                return data;
            }).should.not.be.rejected;
        });
    });

    describe('#omitMessages', function () {
        it('should get omitMessages', function () {
            return apis.request.getTokens().then(function (tokens) {
                return apis.message.omitMessages(tokens);
            }).then(function(data){
                //console.log(data);
                return data;
            }).fail(function(err){
                //console.error(err);
                throw err;
            }).should.not.be.rejected;
        });
    });

    describe('#messageList', function () {
        it('should get messageList', function () {
            return apis.request.getTokens().then(function (tokens) {
                return apis.message.messageList(tokens,1);
            }).then(function (data) {
                //console.log(data);
                return data;
            }).fail(function (err) {
                //console.error(err);
                throw err;
            }).should.not.be.rejected;
        });
    });
});