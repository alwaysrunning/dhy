/**
 * Created by 沐沐 on 2016-04-13.
 * 容易网对接部分
 */

var needle = require('needle');
var q = require('q');
var conf = require('./conf');
var request = require('./apis/request');
var error = require('./error');
var logs = require('logs').logs;
var logsErr = logs.recordCate("err");//记录错误

/**
 *
 * @param unionId
 * @param openId
 * @param parkId
 * @returns {*|promise}
 */
module.exports.tuju_token = function (unionId, openId, parkId) {
    var deferred = q.defer();
    var path = '/key/getKey';
    var url = 'http://' + conf().tuju.host + (conf().tuju.port ? ':' + conf().tuju.port : '') +
        path;

    needle.post(url, {
        unionId: unionId,
        openId: openId,
        parkId: parkId
    }, function (err, res, body) {
        if (err) {
            conf().tuju.printLog && logsErr.error('返回网络报错[' + path + ']:' + err.message);
            var syerr = new error.SystemError(err.code, err.message, path);
            syerr.data = err;
            deferred.reject(syerr);
        } else {
            if (res.statusCode === 200) {
                if (!body.status) {
                    conf().tuju.printLog && console.log('返回结果[' + path + ']:' + JSON.stringify(body));
                    deferred.resolve(body);
                } else {
                    conf().tuju.printLog && logsErr.error('返回API业务报错[' + body.status + '][' + path + ']:' + body.errorMsg);
                    deferred.reject(new error.ApiError(body.status, body.errorMsg, body.data));
                }
            } else {
                conf().tuju.printLog && logsErr.error('返回API服务器报错[' + res.statusCode + '][' + path + ']:' + res.statusMessage);
                deferred.reject(new error.SystemError(res.statusCode, res.statusMessage, path));
            }
        }
    });

    return deferred.promise;
};