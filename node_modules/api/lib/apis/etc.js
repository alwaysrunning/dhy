/**
 * Created by 沐沐 on 2016-01-05.
 * 停车缴费模块
 */

var request = require('./request');
var q = require('q');
var error = require('../error');

/**
 * 历史订单查询
 * @param tokenOrUnionid
 * @param page
 * @param pageSize
 * @returns {*}
 */
module.exports.orders = function (tokenOrUnionid, page, pageSize, tokenid) {
    return request.getTokens(tokenOrUnionid, tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.get.order',
            page: page,
            pageSize: pageSize
        }, tokens)
    })
};

/**
 * 查询牌照记录
 * @param tokenOrUnionid
 * @returns {*}
 */
module.exports.cars = function (tokenOrUnionid, tokenid) {
    return request.getTokens(tokenOrUnionid, tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.get.car'
        }, tokens)
    });
};

/**
 * 删除牌照记录
 * @param tokenOrUnionid
 * @param carNo
 * @returns {*}
 */
module.exports.carDel = function (tokenOrUnionid, carNo, tokenid) {
    return request.getTokens(tokenOrUnionid,tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.del.car',
            carNo: carNo
        }, tokens)
    });
};

/**
 * 清除车辆信息
 * @param tokenOrUnionid
 * @returns {*}
 */
module.exports.carClear = function (tokenOrUnionid,tokenid) {
    return request.getTokens(tokenOrUnionid,tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.del.all.car'
        }, tokens)
    });
};

/**
 * 停车场信息
 * @param carNo
 * @param shopId
 * @returns {promise}
 */
module.exports.carParkInfo = function (carNo, shopId) {
    return request.get({
        method: 'bubugao.mobile.etc.indoor.carinfo',
        carCode: carNo,
        shopId: shopId
    }).then(function (park) {
        if (park.data && park.data.resCode == 0) {
            return park
        } else {
            throw new error.ApiError('9999', '查不到车牌', park);
        }
    });
};

module.exports.carinfoFormate = function (carNo, shopId) {
    return request.get({
        method: 'bubugao.mobile.local.etc.carinfoformat',
        carCode: carNo,
        shopId: shopId
    }).then(function (park) {
        if (park.data && park.data.resCode == 0) {
            return park
        } else {
            throw new error.ApiError('9999', '查不到车牌', park);
        }
    });
};

/**
 * 车牌状态
 * @param carNo
 * @param shopId
 * @returns {promise}
 */
module.exports.carDetail = function (carNo, shopId) {
    return request.get({
        method: 'bubugao.mobile.etc.get.carinfo.details',
        carNo: carNo,
        shopId: shopId
    });
};

/**
 * 根据牌照查找订单信息
 * @param tokenOrUnionid
 * @param carNo
 * @param shopId 梅溪湖二期新增
 * @returns {*}
 */
module.exports.carInfo = function (tokenOrUnionid, carNo, shopId, tokenid) {
    return request.getTokens(tokenOrUnionid,tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.get.carinfo',
            carNo: carNo,
            shopId: shopId
        }, tokens);
    });
};

/**
 * 下单
 * @param tokenOrUnionid
 * @param carNo
 * @param parkno
 * @param shopId 梅溪湖二期新增
 * @param money
 * @param posMoney
 * @param weixinMoney
 * @param openid
 * @returns {*}
 */
module.exports.orderConfirm = function (tokenOrUnionid, carNo, parkno, shopId, money, posMoney, weixinMoney, openid) {
    return request.getTokens(tokenOrUnionid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.save.carinfo',
            carNo: carNo,
            parkno: parkno,
            shopId: shopId,
            money: money,
            posMoney: posMoney,
            weixinMoney: weixinMoney,
            openid: openid
        }, tokens);
    });
};

/**
 * 下单v2
 * @param tokenOrUnionid
 * @param carNo
 * @param shopId 梅溪湖二期新增
 * @param money
 * @param posMoney
 * @param weixinMoney
 * @param openid
 * @returns {*}
 */
module.exports.orderConfirmV2 = function (tokenOrUnionid, carNo, shopId, money, posMoney, weixinMoney, openid) {
    return request.getTokens(tokenOrUnionid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.save.carinfo.v2',
            carNo: carNo,
            money: money,
            shopId: shopId,
            posMoney: posMoney,
            weixinMoney: weixinMoney,
            openid: openid
        }, tokens);
    });
};

/**
 * 查找微信预订单
 * @param orderCode
 * @returns {promise}
 */
module.exports.findPreOrder = function (orderCode) {
    return request.get({
        method: 'bubugao.mobile.etc.weichat.prepay.query.str',
        orderCode: orderCode
    });
};

/**
 * 订单状态查询
 * @param orderCode
 * @returns {*}
 */
module.exports.orderStatus = function (orderCode) {
    return request.get({
        method: 'bubugao.mobile.etc.weichat.pay.query.status',
        orderCode: orderCode
    });
};

module.exports.orderStatusV2 = function (orderCode) {
    return request.get({
        method: 'bubugao.mobile.etc.weichat.pay.query.status.v2',
        orderCode: orderCode
    });
};

/**
 * 获得小票信息
 * @param shopid
 * @param parkno
 * @returns {promise}
 */
module.exports.getPos = function (shopid, parkno) {
    return request.get({
        method: 'bubugao.mobile.etc.get.pos',
        parkno: parkno,
        shopid: shopid
    });
};

/**
 * 获取所有停车场信息(3.0新增)
 * @param shopId 梅溪湖二期新增
 * @returns {promise}
 */
module.exports.getParks = function (shopId) {
    return request.get({
        method: 'bubugao.mobile.etc.get.park',
        shopId: shopId
    });
};

/**
 * 绑定车牌(3.0新增)
 * @param tokenOrUnionid
 * @param carNo
 * @returns {*}
 */
module.exports.bindCar = function (tokenOrUnionid, carNo, tokenid) {
    return request.getTokens(tokenOrUnionid, tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.add.car',
            carNo: carNo
        }, tokens)
    });
};

/**
 * 绑定电子小票到用户(3.0新增)
 * @param tokenOrUnionid
 * @param shopId
 * @param parkno
 * @param carNo
 * @returns {*}
 */
module.exports.bindPos = function (tokenOrUnionid, shopId, parkno, carNo) {
    return request.getTokens(tokenOrUnionid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.pos.bind',
            shopId: shopId,
            parkno: parkno,
            carNo: carNo
        }, tokens);
    });
};

/**
 * 计算减免金额(3.0新增)
 * @param tokenOrUnionid
 * @param carNo
 * @param shopId
 * @returns {*}
 */
module.exports.calcPos = function (tokenOrUnionid, carNo, shopId, tokenid) {
    return request.getTokens(tokenOrUnionid,tokenid).then(function (tokens) {
        return request.getAuth({
            method: 'bubugao.mobile.etc.pos.calc.credit',
            carNo: carNo,
            shopId: shopId
        }, tokens);
    });
};

/**
 * 车位提示信息,模糊搜索 超声波新增
 * @param query 模糊车位号
 * @param parkid 停车场编号
 * @returns {String}
 */
module.exports.positionQuery = function (query, parkid) {
    return request.get({
        method: 'bubugao.mobile.local.etc.carList.positionid',
        parkpositionid: query,
        parkid: parkid
    });
};

/**
 * 输入车位号绑定 超声波定位新增
 * @param parkid 停车场编号
 * @param parkpositionid 车位号
 * @param parkpositionfloor 楼层
 * @param union_id 微信编号
 * @param open_id 微信服务id
 * @returns {promise}
 */
module.exports.savePosition = function (parkid, parkpositionid, parkpositionfloor, union_id, open_id) {
    return request.get({
        method: 'bubugao.mobile.local.etc.save',
        parkid: parkid,
        parkpositionid: parkpositionid,
        parkpositionfloor: parkpositionfloor,
        union_id: union_id,
        open_id: open_id
    });
};

/**
 * 删除车位信息 超声波新增
 * @param parkid
 * @param Id
 * @param union_id
 * @param open_id
 * @param parkpositionid
 * @param parkpositionfloor
 * @returns {promise}
 */
module.exports.delPosition = function (parkid, id, union_id, open_id, parkpositionid, parkpositionfloor) {
    return request.get({
        method: 'bubugao.mobile.etc.del.EtcCarPosition',
        parkid: parkid,
        id: id,
        union_id: union_id,
        open_id: open_id,
        parkpositionid: parkpositionid,
        parkpositionfloor: parkpositionfloor
    });
};

/**
 * 扫一扫记车位 超声波新增
 * @param parkid
 * @param qrcode
 * @param union_id
 * @param open_id
 * @returns {promise}
 */
module.exports.positionScan = function (parkid, qrcode, union_id, open_id) {
    return request.get({
        method: 'bubugao.mobile.local.etc.savepositionscan',
        parkid: parkid,
        qrcode: qrcode,
        union_id: union_id,
        open_id: open_id
    })
};

/**
 * 查询四条车位记录 超声波新增
 * @param parkid
 * @param union_id
 * @param open_id
 * @returns {promise}
 */
module.exports.positionList = function (parkid, union_id, open_id) {
    return request.get({
        method: 'bubugao.mobile.local.etc.querylist',
        parkid: parkid,
        union_id: union_id,
        open_id: open_id
    })
};

/**
 * 车牌状态查询
 * @param carNo
 * @param parkid
 * @param unionid
 */
module.exports.carStatus = function (carNo, parkid, unionid) {
    return q.all([
        module.exports.carDetail(carNo, parkid).then(function (data) {
            return data;
        }, function () {
            return false
        }),
        module.exports.carParkInfo(carNo, parkid)
    ]).spread(function (car, park) {
        return {
            car: car ? car.data : false,
            park: park.data.data[0],
            carNo: carNo,
            parkid: parkid
        };
    }).fail(function (err) {
        return {
            err: err,
            carNo: carNo,
            parkid: parkid
        }
    });
};

/**
 * pc端 车牌状态查询
 * @param carNo
 * @param parkid
 */
module.exports.pcCarStatus = function (carNo, parkid) {
    return q.all([
        module.exports.carDetail(carNo, parkid).then(function (data) {
            return data;
        }, function () {
            return false
        }),
        module.exports.carParkInfo(carNo, parkid)
    ]).spread(function (car, park) {
        return {
            car: car ? car.data : false,
            park: park.data.data[0],
            carNo: carNo,
            parkid: parkid
        };
    }).fail(function (err) {
        return {
            err: err,
            carNo: carNo,
            parkid: parkid
        }
    });
};
